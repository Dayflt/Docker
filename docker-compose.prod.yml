version: "3"

services:
    # postgres_db:
    #     image: postgres:12.0-alpine
    #     volumes:
    #       - postgres_data_dev:/var/lib/postgresql/data/
    #     container_name: postgres_db
    #     restart: always
    #     env_file: 
    #         - ./settings/prod/.env.db  
    #     ports:
    #       - "5432:5432"

    # react-app:
    #     build: ./Frontend

    #     volumes: 
    #         - ./Frontend:/app
    #         - build_folder:/app/build
    #         - ./Frontend/node_modules/:/app/node_modules
    #     stdin_open: true
    #     tty: true
    #     environment:
    #         - CHOKIDAR_USEPOLLING=true

    flask-app:
        build:  ./Backend

        expose:
            - 5000
        restart: always
        volumes:
            - ./Backend/web:/app   
        env_file: 
            - ./settings/prod/.env.prod 
        # depends_on: 
        #     - postgres_db
        command: gunicorn -w 1 --bind 0.0.0.0:5000 app:app

    
    nginx:
        build: ./nginx
        ports:
            - "80:80"
        restart: "on-failure"
        
        # volumes: 
        #     - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
            # - build_folder:/var/www/frontend

        depends_on:
            - flask-app
            # - react-app

# volumes:
#     postgres_data_dev:
#     build_folder:

                


