version: "3"

services:
    react-app:
        build: ./Frontend
        volumes: 
            - ./Frontend:/app
            - build_folder:/app/build
            - ./Frontend/node_modules/:/app/node_modules
        stdin_open: true
        tty: true
        environment:
            - CHOKIDAR_USEPOLLING=true

    flask-app:
        build:  ./Backend
        ports:
            - "5000:5000"
        restart: always
        volumes:
            - ./Backend:/app   
        env_file: 
            - ./settings/prod/.env.prod 
        command: gunicorn -w 4 --bind 0.0.0.0:5000 --timeout=6000 --log-level=debug run:app
   
    nginx:
        build: ./nginx
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        restart: "on-failure"
        volumes: 
            # - ./nginx/nginx.conf:/etc/nginx/conf.d
            - build_folder:/var/www/Frontend
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        command : "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on:
            - flask-app
            - react-app
    
    certbot:
        image: certbot/certbot
        restart: unless-stopped
        container_name: certbot
        volumes: 
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - nginx
        entrypoint : "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
    build_folder:

                


